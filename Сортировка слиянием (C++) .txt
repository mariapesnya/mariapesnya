Сортировка слиянием (C++): 
#include <iostream>
#include <vector>

using namespace std;

// Функция для слияния двух отсортированных подмассивов
void merge(vector<int>& arr, int left, int mid, int right) {
    // Размеры двух подмассивов
    int n1 = mid - left + 1;
    int n2 = right - mid;

    // Временные массивы
    vector<int> L(n1), R(n2);

    // Копируем данные во временные массивы L[] и R[]
    for (int i = 0; i < n1; i++)
        L[i] = arr[left + i];
    for (int j = 0; j < n2; j++)
        R[j] = arr[mid + 1 + j];

    // Сливаем временные массивы обратно в arr[left..right]
    int i = 0, j = 0, k = left;

    while (i < n1 && j < n2) {
        if (L[i] <= R[j]) {
            arr[k++] = L[i++];
        } else {
            arr[k++] = R[j++];
        }
    }

    // Копируем оставшиеся элементы L[], если есть
    while (i < n1)
        arr[k++] = L[i++];

    // Копируем оставшиеся элементы R[], если есть
    while (j < n2)
        arr[k++] = R[j++];
}

// Рекурсивная функция сортировки слиянием
void mergeSort(vector<int>& arr, int left, int right) {
    if (left < right) {
        int mid = left + (right - left) / 2;

        // Сортируем первую и вторую половины
        mergeSort(arr, left, mid);
        mergeSort(arr, mid + 1, right);

        // Сливаем отсортированные половины
        merge(arr, left, mid, right);
    }
}

// Функция для вывода массива
void printArray(const vector<int>& arr) {
    for (int val : arr)
        cout << val << " ";
    cout << endl;
}

// Главная функция
int main() {
    vector<int> arr = {12, 11, 13, 5, 6, 7};

    cout << "Исходный массив:\n";
    printArray(arr);

    mergeSort(arr, 0, arr.size() - 1);

    cout << "Отсортированный массив:\n";
    printArray(arr);

    return 0;
}